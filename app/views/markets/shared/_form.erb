<%= simple_form_for [user, market], 
    :html => {"data-tags" => "#{raw_tags(market)}", role: "form"}  do |f| %>
    <div id="wizard">
    
        <h3>Name and description</h3>
        <section>  
        <%= f.input :name, input_html: { class: 'market-name' }%>
        <%= f.input :description, :as => :text, label_html: { class: 'market-description' } %>
        </section>
        
        <h3>Featured photo</h3>
        <section>
        <%= f.input :featured, as: :attachinary %>
        </section>


        <h3>Category and tags</h3>
        <section>
        <%= f.association :category, :include_blank => false %>

        <%= f.input :tags, input_html: { class: 'tm-input', placeholder: "Tags" } %>
        <p id="tags-container"></p>
        </section>


        <h3>Date</h3>
        <section>
        <%= f.input :date %> 
        <div id="datepicker"><div></div>
        </div>

        </section>

        <h3>Location</h3>
        <section id = "form-market-location" > 
          <%= f.input :address %>
          <%= f.input :city, { class: 'cities', placeholder: "Ciudad" } %>
          <div class = "hidden">
          <%= f.input :longitude %>
          <%= f.input :latitude %>
          </div>
          <%= render "markets/shared/mapsmall" %>
        </section>
    </div>
        <%= f.button :submit, class: 'btn'%>
<% end %>
<script>

$( document ).ready(function() {
      $("#wizard").steps({
          headerTag: "h3",
          bodyTag: "section",
          transitionEffect: "slideLeft",
          stepsOrientation: 1,
          enableFinishButton: false,
          enablePagination: false,
          enableAllSteps: true
      });

      getDatesSelected($('#market_date').val());

      $('#datepicker div').datepicker({
          weekStart: 1,
          startDate: "today",
          endDate: "+1m",
          language: "es",
          multidate: true,
          todayHighlight: true
      }).on('changeDate', function(e){
          fillInputWithDates(e);
      });

      if (areDatesSelected($('#market_date').val()))
        $('#datepicker div').datepicker('setDates', getDatesSelected($('#market_date').val()));

   $('.attachinary-input').attachinary();

   var tagApi = jQuery(".tm-input").tagsManager({
      prefilled: $( "form" ).data( "tags"),
      delimiters: [13, 44],
      tagClass: "tm-tag",
      tagsContainer: '#tags-container'
    });

  var tags = new Bloodhound({
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
    queryTokenizer: Bloodhound.tokenizers.whitespace,
    limit: 15, 
    prefetch: {
      url: '/tags/index.json',
    }
  });
 
  tags.initialize();
 
  $('.tm-input').typeahead(null, {
    name: 'tags',
    displayKey: 'name',
    hint: true,
    highlight: true,
    minLength: 1,
    source: tags.ttAdapter(),
  });

  var theCities = ['Madrid', 'Barcelona', 'Bilbao', 'Valencia'];
 

  // constructs the suggestion engine
  var cities = new Bloodhound({
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
    queryTokenizer: Bloodhound.tokenizers.whitespace,
    // `states` is an array of state names defined in "The Basics"
    local: $.map(theCities, function(city) { return { value: city }; })
  });
   
  // kicks off the loading/processing of `local` and `prefetch`
  cities.initialize();

  $('#market_city').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
  {
    name: 'cities',
    displayKey: 'value',
    // `ttAdapter` wraps the suggestion engine in an adapter that
    // is compatible with the typeahead jQuery plugin
    source: cities.ttAdapter()
  });
  $('#market_address').blur(function () {
    updateLocationData();
  });

  $('#market_city').blur(function () {
    updateLocationData();
  });
});

var areDatesSelected = function(datesString){
  return datesString != "";
};
var stringToDate = function(data){
  return moment(data, 'DD/MM/YYYY').toDate();
};
var getDatesSelected = function(datesString){
  var datesSelected = datesString.split(","); 
  var dates  = new Array(); 
  for(i = 0; i < datesSelected.length; i++)
    dates.push(stringToDate(datesSelected[i]));
  return dates;
};

var fillInputWithDates = function(data){
  dateString = moment(data.dates[0]).format('DD/MM/YYYY');
  for (i = 1; i < data.dates.length; i++){
    (function(i){
      dateString += "," + moment(data.dates[i]).format('DD/MM/YYYY');
    })(i);
  }
  $('#market_date').val(dateString);
};

var updateLocationData = function(){
  if (addressAndCityAreFilled())
    getLocationFromAddress(encodeAddressToUrl());
};

var addressAndCityAreFilled = function(){
  return $('#market_address').val() && $('#market_city').val();
};

var encodeAddressToUrl = function(){
  var encodedAddress = encodeURIComponent($('#market_address').val());
  var encodedCity = encodeURIComponent($('#market_city').val());
  var addressUrl = "https://maps.googleapis.com/maps/api/geocode/json?address=" + encodedAddress + "%20" + encodedCity + "&sensor=false&key=AIzaSyBkhXw8kMql7c4tc1LwaMGbm9024z03AKU";
  return addressUrl;
};

var getLocationFromAddress = function(url){
  var lat, lng;
  $.getJSON(url, function(data){
    lat = data.results[0].geometry.location.lat;
    lng = data.results[0].geometry.location.lng;
    $("#market_latitude").val(lat);
    $("#market_longitude").val(lng);
    PM.addMarker([lat, lng], false);
    PM.map.setView([lat, lng], 14);
  });
};

</script>
